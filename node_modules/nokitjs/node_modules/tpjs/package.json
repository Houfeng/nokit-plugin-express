{
  "name": "tpjs",
  "rawName": "tp",
  "version": "3.7.1",
  "description": "最简洁高效的js模板引擎!",
  "main": "./lib/tp.js",
  "bin": {
    "tp": "./bin/cli.js"
  },
  "scripts": {
    "test": "echo \"There is no test\" && exit 1"
  },
  "keywords": [
    "tp",
    "template",
    "engine",
    "tmpl",
    "javaScript",
    "html"
  ],
  "author": {
    "name": "Houfeng",
    "email": "admin@xhou.net"
  },
  "homepage": "http://houfeng.net/tp",
  "bugs": {
    "url": "https://github.com/Houfeng/tp/issues",
    "email": "admin@xhou.net"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Houfeng/tp.git"
  },
  "dependencies": {
    "cmdline": "0.0.5",
    "real-utils": "0.0.1",
    "uglify-js": "^2.4.24"
  },
  "devDependencies": {
    "del": "^1.2.0",
    "gulp": "^3.9.0",
    "gulp-concat": "^2.6.0",
    "gulp-header": "^1.2.2",
    "gulp-jshint": "^1.11.2",
    "gulp-uglify": "^1.2.0",
    "gulp-rename": "^1.2.2",
    "gulp-replace": "^0.5.3",
    "gulp-util": "^3.0.6"
  },
  "readme": "### TP 模板引擎\n>Tp 是一个 “轻量，简洁，高效” 的 javascript 模板引擎！\n\n[![npm version](https://badge.fury.io/js/tpjs.svg)](http://badge.fury.io/js/tpjs)  \n\n### 简介\n```\n+ 轻量，tp是目前能见到最轻量的javascript模板引擎，只有一个不足1.5k的文件。\n+ 简洁，tp的语法非常简单，对于一个熟悉html、js的开发人员来说学习难度为 0。\n+ 高效，tp支持模板预编译，快于任何一个你所见过的javascript模板引擎。\n+ 另外，tp同时支持在浏览器环境使用及服务端javascript环境(Node.js)使用。\n```\n\n### 联系作者\n```\n+ 您可以发邮件到 admin@xhou.net\n+ 或者访问 http://www.houfeng.net\n+ 关注微博 http://weibo.com/houfeng\n```\n\n### 在浏览器中吏用\n\n#### 在页面中引入\n```\n+ 下载tp\n+ 将tp.js或tp-min.js放到项目中合适的位置。\n+ 在相关页面用<script src='tp的url'></script>引入tp。\n```\n\n#### AMD/CMD 方式引用\n```javascript\nvar tp = require('相对路径');\n```\n\n#### 解析(tp.parse)\n代码:\n```javascript\nvar html='<div>My name is <% $(name) %></div>';\nvar rs=tp.parse(html,{name:'tp'});\n```\n结果:\n```\nrs: “<div>My name is tp</div>”\n```\n\n#### 编译(tp.compile)\n代码:\n```javascript\nvar html='<div>My name is <% $(name) %></div>';\nvar fn=tp.compile(html);\nvar rs=fn({name:'tp'});\n```\n结果:\n```\nfn: 编译结果，可以暂存以供调用。\nrs: “<div>My name is tp</div>”\n```\n\n#### HTML元素\nHTML:\n```html\n<script id=\"list-template\" type='text/template'>\n<% for(var i in this %>\n<li><% $(this[i]) %></li>\n<% } %>\n</script>\n\n<ul id=\"list\">\n</ul>\n```\n代码:\n```javascript\n//绑定数据:\ntp.bind({\n\ttemplate:'list-template',\n\telement:'list',\n\tmodel:[\"item-1\",\"item-2\"]\n}); \n//追加绑定数据:\ntp.bind({\n\ttemplate:'list-template',\n\telement:'list',\n\tmodel:[\"item-1\",\"item-2\"],\n\tappend:true\n}); \n```\n\n结果:\n```html\n<ul id=\"list\">\n<li>item-1</li>\n<li>item-2</li>\n</ul>\n```\n\n### 在 Node.js 中使用\n\n#### 安装\n```javascript\n[sudo] npm install tpjs [-g]\n```\n\n#### 引用\n```javascript\nvar tp = require('tpjs');\n\n//解析\nvar rs = tp.parse(html,options);\n//预编译\nvar fn = tp.compile(html,options);\n```\n\n#### 命令行工具\n使用命令行工具需要全局安装 tpjs，如下\n```javascript\n[sudo] npm install tpjs -g\n```\nCLI 说明\n```javascript\ntp <src> <dst>\n```\n1. src: 源文件路径，相对于当前工作目录\n2. dst: 输出的目标路径，相对于当前工作目录\n",
  "readmeFilename": "README.md",
  "gitHead": "8ac1cfc7e1e71c74c69d4163dea1d883d74569d8",
  "_id": "tpjs@3.7.1",
  "_shasum": "4c4a31a99bbf37cd1e7149301a7985f79f121c7b",
  "_from": "tpjs@>=3.7.1 <4.0.0"
}
